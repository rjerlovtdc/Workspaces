!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("mousetrap")):"function"==typeof define&&define.amd?define(["exports","mousetrap"],e):e((t=t||self).widgetApiLib={},t.Mousetrap)}(this,function(t,e){"use strict";function s(t){const e=t.match(/^(https?:)\/\/(([^:/?#]*)(?::([0-9]+))?)([/]{0,1}[^?#]*)(\?[^#]*|)(#.*|)$/);return e?{href:t,protocol:e[1],host:e[2],hostname:e[3],port:e[4],pathname:e[5],search:e[6],hash:e[7]}:{}}e=e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e;const r="WIDGET_API_PROTOCOL_1",o=["https://*.puzzel.com"],i=2e4;class a{constructor(t,s,{receiver:r},o){this._id=1e3,this._calls=new Map,this._port=t,this._config=s,this._origin=o,this._subscriptions={},this._observers={},this._callbacks={},this._mt=new e,t.onmessage=(e=>{this._receiver(e),r&&r(e,t)}),this._applyKeyboardPolicy(s.keyboardPolicy||{}),this.on("SYSTEM_APPLY_KEYBOARD_POLICY",t=>this._applyKeyboardPolicy(t))}get options(){return this._config}get port(){return this._port}get origin(){return this._origin}_applyKeyboardPolicy(t){this._mt.reset(),Object.keys(t).forEach(e=>{const s=t[e],{command:r,target:o}=s,i=String(s.combo).toLowerCase();this._mt.bind(i,t=>{t.preventDefault?t.preventDefault():t.returnValue=!1,this.call("events.publish",r,{target:o})})})}_receiver(t){const{type:e}=t.data;"event"===e&&this._handleEvent(t.data),"changed"===e&&this._handlePropertyChange(t.data),"result"===e&&this._handleResult(t.data),"error"===e&&this._handleError(t.data),"call"===e&&this._handleCallbackCall(t.data)}_handleResult({value:t,id:e}){if(this._calls.has(e)){const{resolve:s}=this._calls.get(e);this._calls.delete(e),s(t)}}_handleError({value:t,id:e}){if(this._calls.has(e)){const{reject:s}=this._calls.get(e);this._calls.delete(e),s(t)}}_handleEvent({name:t,value:e}){this._subscriptions[t]&&this._subscriptions[t].forEach(t=>t(e))}_handlePropertyChange({name:t,old:e,new:s}){this._observers[t]&&this._observers[t].forEach(t=>t(s,e))}_handleCallbackCall({name:t,value:e,id:s}){this._callbacks[t]?new Promise(s=>s(this._callbacks[t](...e))).then(t=>{this._port.postMessage({result:t,id:s})}).catch(t=>{this._port.postMessage({error:t,id:s})}):this._port.postMessage({error:"Callback not found.",id:s})}on(t,e){const s=Array.isArray(this._subscriptions[t]);return this._subscriptions[t]=s?this._subscriptions[t].concat(e):[e],s||this._port.postMessage({subscribe:t}),()=>{const s=this._subscriptions[t];s&&(this._subscriptions[t]=s.filter(t=>t!==e))}}call(t,...e){return function(t,e){let s;const r=new Promise((t,r)=>{s=setTimeout(()=>r(new Error("Promise timeout")),e)});return Promise.race([t,r]).then(t=>(s&&clearTimeout(s),t)).catch(t=>{throw s&&clearTimeout(s),t})}(new Promise((s,r)=>{this._calls.set(this._id,{resolve:s,reject:r}),this._port.postMessage({call:t,args:e,id:this._id}),this._id+=1}),i)}get(t){return this.call(t)}watch(t,e){const s=Array.isArray(this._observers[t]);return this._observers[t]=s?this._observers[t].concat(e):[e],s||this._port.postMessage({watch:t}),()=>{const s=this._observers[t];s&&(this._observers[t]=s.filter(t=>t!==e))}}ready(){this._port.postMessage({ready:!0})}callback(t,e){return this._callbacks[t]=e,()=>{delete this._callbacks[t]}}}t.DEFAULT_ORIGINS=o,t.WIDGET_API_PROTOCOL_VERSION=r,t.connect=function(t=o,e={}){return new Promise((o,i)=>{Array.isArray(t)||(t=[t]),window.addEventListener("message",r=>{t.some(t=>(function(t,e){const r=s(t),o=s(e);return function(...t){const e=t.map(t=>(t||"").split(".")).map(t=>t.reverse()).sort((t,e)=>e.length-t.length),[s,...r]=e;return s.every((t,e)=>r.every(s=>s.length<e+1?"*"===s[s.length-1]:s[e]===t||"*"===s[e]||"*"===t))}(r.hostname,o.hostname)&&r.port===o.port&&r.protocol===o.protocol})(t,r.origin))?o(new a(r.ports[0],r.data,e,r.origin)):i(new Error(`Connection to host rejected: The origin ${r.origin} doesn't match.`))},{once:!0}),window.parent.postMessage(r,"*")})},Object.defineProperty(t,"__esModule",{value:!0})});